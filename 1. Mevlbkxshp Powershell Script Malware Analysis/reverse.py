# 
# uncompressed_data = []
# with open("uncompressed_data", "r") as NFILE:
#     for lines in NFILE.readlines():
#         uncompressed_data.append(lines.rstrip())


# final_result = []
# for data in uncompressed_data:
#     try:
#         # final_result.append(chr(int(data)), end="")))
#         final_result.append(chr(int(data)))
#     except:
#         pass

# final_result = "".join(final_result)

# with open("decompressed_code.cs", 'w') as NFILE:
#     NFILE.write(final_result)


def InteregrToBytes(Data, key):
    final_data = []
    cursor = 0
    
    while(cursor < len(Data)):
        
        ascwKey = ord(key[0])
        
        debuff = Data[cursor] / (len(key) ^ 128)
        
        decData = debuff - ((ascwKey * 256) | 128 % 32)
        final_data.append(decData)
        cursor = cursor + 1
    return final_data

key = "QoMn4OhGfV+oHNb8AzV=="
Kernel32 =  [ 3105607, 3104713, 3106650, 3106054, 3104713, 3105756, 3097263, 3097114 ]
NtDLL =  [3106054, 3106948, 3104564, 3105756, 3105756 ]
ResumeThread =  [3101882, 3104713, 3106799, 3107097, 3105905, 3104713, 3102180, 3105160, 3106650, 3104713, 3104117, 3104564 ]
Wow64SetThreadContext =  [3102627, 3106203, 3107395, 3097710, 3097412, 3102031, 3104713, 3106948, 3102180, 3105160, 3106650, 3104713, 3104117, 3104564, 3099647, 3106203, 3106054, 3106948, 3104713, 3107544, 3106948 ]
SetThreadContext =  [3102031, 3104713, 3106948, 3102180, 3105160, 3106650, 3104713, 3104117, 3104564, 3099647, 3106203, 3106054, 3106948, 3104713, 3107544, 3106948 ]
Wow64GetThreadContext =  [ 3102627, 3106203, 3107395, 3097710, 3097412, 3100243, 3104713, 3106948, 3102180, 3105160, 3106650, 3104713, 3104117, 3104564, 3099647, 3106203, 3106054, 3106948, 3104713, 3107544, 3106948 ]
GetThreadContext =  [3100243, 3104713, 3106948, 3102180, 3105160, 3106650, 3104713, 3104117, 3104564, 3099647, 3106203, 3106054, 3106948, 3104713, 3107544, 3106948 ]
VirtualAllocEx =  [3102478, 3105309, 3106650, 3106948, 3107097, 3104117, 3105756, 3099349, 3105756, 3105756, 3106203, 3104415, 3099945, 3107544 ]
WriteProcessMemory =  [ 3102627, 3106650, 3105309, 3106948, 3104713, 3101584, 3106650, 3106203, 3104415, 3104713, 3106799, 3106799, 3101137, 3104713, 3105905, 3106203, 3106650, 3107693 ]
ReadProcessMemory =  [ 3101882, 3104713, 3104117, 3104564, 3101584, 3106650, 3106203, 3104415, 3104713, 3106799, 3106799, 3101137, 3104713, 3105905, 3106203, 3106650, 3107693 ]
ZwUnmapViewOfSection =  [ 3103074, 3107395, 3102329, 3106054, 3105905, 3104117, 3106352, 3102478, 3105309, 3104713, 3107395, 3101435, 3104862, 3102031, 3104713, 3104415, 3106948, 3105309, 3106203, 3106054 ]
CreateProcessA =  [3099647, 3106650, 3104713, 3104117, 3106948, 3104713, 3101584, 3106650, 3106203, 3104415, 3104713, 3106799, 3106799, 3099349 ]        

final_data = []
def to_readable(final_data):
    text = []
    for data in final_data:
        text.append(chr(int(float(data))))

    print("".join(text))

final_data = InteregrToBytes(Kernel32, key)
to_readable(final_data)
final_data = InteregrToBytes(NtDLL, key)
to_readable(final_data)
final_data = InteregrToBytes(ResumeThread, key)
to_readable(final_data)
final_data = InteregrToBytes(Wow64SetThreadContext, key)
to_readable(final_data)
final_data = InteregrToBytes(SetThreadContext, key)
to_readable(final_data)
final_data = InteregrToBytes(Wow64GetThreadContext, key)
to_readable(final_data)
final_data = InteregrToBytes(GetThreadContext, key)
to_readable(final_data)
final_data = InteregrToBytes(VirtualAllocEx, key)
to_readable(final_data)
final_data = InteregrToBytes(WriteProcessMemory, key)
to_readable(final_data)
final_data = InteregrToBytes(ReadProcessMemory, key)
to_readable(final_data)
final_data = InteregrToBytes(ZwUnmapViewOfSection, key)
to_readable(final_data)
final_data = InteregrToBytes(CreateProcessA, key)
to_readable(final_data)
